<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>116</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move_contact</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>-90</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>32</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//number of voices is a constant

//personality
strstuck[0] = "?"
strstuck[1] = "!"
strstuck[2] = "newspaper"
readindex = 0
ball_color[0] = c_darkred
ball_color[1] = c_yellow
ball_color[2] = c_red
ball_color[3] = c_blue

voice_volume = 1
suckNo = floor(random(3))
voice =  floor(random(VOICES))
curr_voice = noone    

clickDown = false
instance_create(x,y,obj_ballcollision)
skipping = false
pos_index = 0
TAILSIZE = 15
MAXPOS = 120*30/3//seconds * 30/3
shot = false
obj_power = 0
//block = instance_nearest(x,y,wall_par)
old_direction = direction
old_vspeed = vspeed
old_hspeed = hspeed
bounce_sound = true
//338 is first room
lastWallHit = instance_nearest(x,y,obj_solid);
hotair = false
sprite_index = spr_ball_waiting
image_speed = 0
spins = 4
spin_speed =0
burning = false
image_angle2 = image_angle
sprite_index2 = sprite_index
wee = false
speak = false
tempspeed = 0
tempx = x
tempy = y
yTilt = YoYo_GetTiltY()
WoodExists = false
DirtExists = false
SandExists = false
RockExists = false
BlockExists = false
TrampExists = false
bounced = false
i = 0
repeat(MAXPOS)
{
    path_x[i] = x
    path_y[i] = y
    i = 0 
}
polse = 0

collisionTimer = 0
continuousCounter = 0

//keys
spaceDown = false

//game end
death = 'unknown'

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.roomend= false and global.voices = true
{
    if speed &gt; 0.4
        play_voice('wee',voice)
    alarm[4] = 3*30 + random(5)*30
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wee = false
speak = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if pos_index &lt; MAXPOS
    pos_index += 1
path_x[pos_index] = x
path_y[pos_index] = y

alarm[2] = 3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bounce_sound = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if global.custom = true
{
    if obj_custom.play = false
    {
        if tempspeed = 0
        {
            tempspeed = speed
            speed = 0
            tempx = x
            tempy = y
        }
        else
        {
            x = tempx
            y = tempy
        }
    }
    else if tempspeed != 0
    {
        speed = tempspeed
        tempspeed = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hotair = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.roomend = false
{
    StretchBallCollision()
    
    //test if about to bounce
    if 
    //right
    (collision_line(x+lengthdir_x(8.1,direction+90),y+lengthdir_y(8.1,direction+90),x+lengthdir_x(8.1,direction+90)+lengthdir_x(speed+0.1,direction),y+lengthdir_y(8.1,direction+90)+lengthdir_y(speed+0.1,direction),wall_par,false,false) &lt;&gt; noone 
    //left
    or collision_line(x+lengthdir_x(8.1,direction-90),y+lengthdir_y(8.1,direction-90),x+lengthdir_x(8.1,direction-90)+lengthdir_x(speed+0.1,direction),y+lengthdir_y(8.1,direction-90)+lengthdir_y(speed+0.1,direction),wall_par,false,false) &lt;&gt; noone 
    //centre
    or collision_line(x,y,x+lengthdir_x(speed+16,direction),y+lengthdir_y(speed+16,direction),wall_par,false,false) &lt;&gt; noone )and speed &gt; 0.6 and bounce_sound = true
    {
        collisionTimer = 0;
        lastWallHit = instance_nearest(x-8,y-8,obj_solid);
        //sound_play(fx_worp)
        bounce_sound = false
        bounced = false
        alarm[0] = 4
        
        global.bounces += 1 //max(global.bounces + 1,1)
        if pos_index &lt; MAXPOS
            pos_index += 1
        path_x[pos_index] = x
        path_y[pos_index] = y
        //change image
        ChangeImage()
        if global.voices = true and shot = true
        {
            if speed &gt; 1
            {
                if (floor(random(2)) or speed &lt; 4 or speak = true)
                    play_voice('ah',voice)
                else
                    play_voice('oach',voice)
                speak = true
                alarm[3] = 15
            }
        }//check what type fo block it hits
        //CollisionBlockType()
        alarm[4] = 2*30 + random(4)*30
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>115</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_bounce</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.roomend = false
{
    /*
      ***********
      ** shoot **
      ***********
    */
    
    //at some point between the ball being create and shot, space was not pressed
    if !keyboard_check(vk_space) and spaceDown = false
        spaceDown = true
    
    if shot = false
    {
        sprite_index2 = spr_ball_board 
        obj_power = min(point_distance(x,y,mouse_xroom(),mouse_yroom())/20,32) 
    }
    else
        global.time += 1
        
    if mouse_check_button_pressed(mb_left) and shot = false and global.skipping = false 
    {
       sprite_index2 = spr_ball_waiting
       clickDown = true
   }
    
      
    //shoot
    if ((mouse_check_button_released(mb_left) and clickDown = true ) or (keyboard_check(vk_space) and  spaceDown = true))  and shot = false and obj_power &gt; 0 and skipping = false and customplay()
    {        
        clickDown = false
        shot = true
        alarm[4] = 30*5 + random(5)*30 //no bounce 'wee'
        direction = point_direction(x,y,mouse_xroom(),mouse_yroom())
        speed = obj_power
        sprite_index2 = spr_ball
        global.bounces = 0
        pos_index = 0
        alarm[2] = 1
        if global.voices = true
          play_voice('wee',voice)
        
        global.lastx = mouse_x
        global.lasty = mouse_y
        global.trys += 1
    }
      
      
      //image while waiting
      if shot = false and 30*random(2) &lt;= 1
        image_index = random(8)
    
    //image        
        image_angle2 -= spin_speed*10     
        spin_speed = min( max( spin_speed - 0.01, 0 ), spin_speed + 0.01 )
      
    /*
      *************
      ** physics **
      *************
    */  
    
    //if not vspeed = 0 and block.y+8 &gt; y+15 and block.x &lt; x and block.x+16 &gt; x
    //  {
    //  show_message('gravity')
    vspeed += 0.45
    //  }               // gracity
    //Magnet
    if distance_to_object(obj_magnet_north) &lt; 75 
        {magnet = instance_nearest(x-8,y-8,obj_magnet_north)
        hspeed += (magnet.x+8-x)/50
        if hspeed &gt; 16
                {hspeed = 16}
        vspeed += (magnet.y+8-y)/50
        if vspeed &gt; 16
                {vspeed = 16}}
                
    if distance_to_object(obj_magnet_south) &lt; 75 
        {magnet = instance_nearest(x-8,y-8,obj_magnet_south)
        hspeed -= (magnet.x+8-x)/50
        if hspeed &gt; 16
                {hspeed = 16}
        vspeed -= (magnet.y+8-y)/50
        if vspeed &gt; 16
                {vspeed = 16}}
    if obj_power &gt; 0
    {
        if global.platform = Windows or global.platform = HTML5
        {
            //arrows
            //left
            if keyboard_check_pressed(vk_left)
              hspeed = hspeed - 1
            if keyboard_check_released(vk_left)
              hspeed = hspeed + 1
            
              //right
            if keyboard_check_pressed(vk_right)
              hspeed = hspeed + 1
            if keyboard_check_released(vk_right)
              hspeed = hspeed - 1
          }
          else if global.platform = iOS
          {
               //tilt controls
               hspeed += min(max(-1,yTilt*3),1)
               yTilt = YoYo_GetTiltY()
               hspeed -= min(max(-1,yTilt*3),1)
          }
    }
    
    
        collisionTimer += 1
    
}

//block = instance_nearest(x,y-1,obj_wall)
speed = max(speed - 0.05,0) // resistance
continuousCounter += 1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>115</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_bounce</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hotair">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hotair = false
{
    hotair = true
    vspeed -= 0.55
    x += sin(y/(30))/2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>120</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_linear_step</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>other.x+8</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>other.y+8</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-(speed+0.1)</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_lava">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>death = 'lava'
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_leaves">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//speed -= 0.01
//direction += random(10)-5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if spins &lt;= 0
//{
/*    ran = random(100)
    image_speed = random(speed)/5
    if hspeed &lt; 1 and ran &lt; 50
    {
        sprite_index = spr_ball_board
        image_angle = random(360)
        spin_speed = random(speed)/5
        //spins = random(5)
    }
    else if ran &lt; 30
    {
        sprite_index = spr_ball
        image_angle = random(360)
        spin_speed = random(speed)/5
        //spins = ceil(random(speed))
    }
    else if ran &lt; 60
    {
        sprite_index = spr_ball_spin
        image_angle = random(360)
        spin_speed = random(speed)/5
        //spins = ceil(random(speed))
    }
    else if ran &lt; 90
    {
        sprite_index = spr_ball_spin2
        image_angle = random(360)
        spin_speed = random(speed)/5
        //spins = ceil(random(speed))
    }
//}
    
//spins -= 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if shot = true and global.detail &gt;= GRAPHICHIGH
{
    //create dead ball
    dead = instance_create(x,y,obj_deadball)
    
    //copy properties to dead ball
    dead.voice = voice
    dead.speed = speed
    dead.direction = direction
    dead.image_index = image_index
    dead.sprite_index2 = sprite_index2
    dead.image_angle2 = image_angle2
    dead.x = x
    dead.y = y
    dead.image_alpha = 0.75
    dead.alive = true
    dead.pos_index = pos_index
    dead.color = make_color_hsv(color_get_hue(ball_color[voice]),color_get_saturation(ball_color[voice])/4,color_get_value(ball_color[voice]))
    dead.time = global.time
    dead.bounces = global.bounces
    //copy path
    i = 0
    repeat(pos_index)
    {
        dead.path_x[i] = path_x[i]
        dead.path_y[i] = path_x[i]
        i+=1
    }
    //set alarm for path
    dead.alarm[2] = 3
    
    //in lava
    if death = "lava"
        dead.alarm[5] = 15
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_display</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_ctrl</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_ctrl</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>check_blocks()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reset ball</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
lastWallHit = instance_nearest(x,y,obj_solid);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.roomend = false
{
    global.completes += 1
    if global.voices = true
        play_voice('finish',voice)

    if pos_index &lt; MAXPOS
        pos_index += 1
    path_x[pos_index] = x
    path_y[pos_index] = y

    global.dis = 0
    var i;
    i = 0
    repeat(pos_index-1)
    {
        global.dis += point_distance(path_x[i],path_y[i],path_x[i+1],path_y[i+1])/16//sqrt((path_y[i] - path_y[i+1])^2+(path_x[i] - path_x[i+1])^2)/16
        i += 1
    }

    obj_ctrl.pathindex = 0
    obj_ctrl.pathmax = pos_index
    
    //calculate score
    x__ = (global.dis/30+global.bounces+global.time/30)/9
    global._score = 100/(x__+2)+50-x__/2
    //calc stage score
    global.stageScore = CalcAvgLevelScore(global.stage)
    
    UnlockNewStaged()
    
    //save game
    if global.IsLevel
        saverecords()
        
    global.roomend = true
    speed = 0
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//power arrow
if shot = false
    draw_sprite_ext(spr_power_arrow,1,x,y,obj_power/10,0.5,point_direction(x,y,mouse_xroom(),mouse_yroom()),noone,0.5)
    
    
        
//? for waiting
if ((speed &lt; 0.5 and collisionTimer &gt; 30*3.5) and shot = true and global.roomend = false)
{
    if suckNo &lt; 2
    {
        draw_set_halign(fa_middle)
        draw_set_valign(fa_bottom)
        draw_set_alpha(sin(continuousCounter/(30-voice*5))/5+4/5)
        captionAngle = (sin(continuousCounter/(10+voice*5)))*10
        draw_set_font(fontBall)
        draw_text_shadow_transformed(x+suckNo,y-8,strstuck[suckNo],1,1,captionAngle,c_white,c_black,1)
        draw_set_alpha(1)
        draw_set_halign(fa_left)
        draw_set_valign(fa_top)
    }
    else if suckNo = 2
    {
        if readindex &lt; 5
           readindex += 2/30
        readindex += floor(random(2))/30
        if readindex &gt; 8
           readindex = 5
        image_angle2 = 0
        sprite_index2 = spr_ball_read
        image_index = readindex
    }
    
}
    
    
    //ball
draw_set_alpha(0.1)
draw_circle_color(x,y,7+5,c_white,noone,false)
draw_set_alpha(image_alpha)
draw_set_color(ball_color[voice])
draw_circle(x,y,7,false)
draw_sprite_ext(sprite_index2,image_index,x,y,image_xscale,image_yscale,image_angle2,image_blend,image_alpha)
if (wee = true or speak = true) and sprite_index2 != spr_ball_spin and sprite_index2 != spr_ball_spin2 and sprite_index != spr_ball
    draw_sprite_ext(spr_ball_speak,image_index,x,y,image_xscale,image_yscale,image_angle2,image_blend,image_alpha)





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
