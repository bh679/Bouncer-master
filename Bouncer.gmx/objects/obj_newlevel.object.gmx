<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_stage1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_solid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


//near = 0
left = false
right = false
up = false
down = false
topleft = false
topright = false
bottomleft = false
bottomright = false
Level = 0

image_speed = 0

_Stage.LevelOrder[_Stage.LevelNo] = id
_Stage.LevelNo += 1
var i;
i = _Stage.LevelNo - 1
curr = i

while(i &gt;= 0)
{
    if _Stage.LevelOrder[i].x &gt; x
    {
        temp = _Stage.LevelOrder[curr]
        _Stage.LevelOrder[curr] = _Stage.LevelOrder[i]
        _Stage.LevelOrder[i] = temp
        curr = i
    }
    //else
    //    i = -1
    
    i -= 1
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if position_meeting(x-16,y,obj_solid) = true //check left
  left = true  

if position_meeting(x,y-16,obj_solid) = true//check up
  up = true 

if position_meeting(x+17,y,obj_solid) = true//check right
  right  = true    

if position_meeting(x,y+17,obj_solid) = true//check down
  down = true    

if position_meeting(x-16,y-16,obj_solid) = true //check topleft  
    topleft = true

if position_meeting(x+16,y-16,obj_solid) = true //check topright
    topright = true
    
if position_meeting(x-16,y+16,obj_solid) = true //check bottom left
    bottomleft = true

if position_meeting(x+16,y+16,obj_solid) = true //check bottom right
    bottomright = true

var i;
   
i = 0
while( i &lt;= _Stage.LevelNo-1)
{
    if _Stage.LevelOrder[i] = id
    {
        Level = i
        image_index = i
        i = _Stage.LevelNo
    }
    i += 1
}

AdjId = instance_nearest(x,y,obj_solid)

if Levels.LevelsInStage[Levels.stage[Levels.roomindex]] &lt;= Level
{
    unlocked = true
    _Stage.maxunlocked = Level;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room = Levels.roomid[Level]
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//if level locked
if Levels.LevelsInStage[Levels.stage[Levels.roomindex]] &lt;= Level and Level != 0
{
    //draw image overtop
    draw_sprite_ext(_Stage.CoverSprite[Levels.stage[Levels.roomindex]],0,x,y,1,1,0,noone,1)
}
else // if unlocked
{
    //draw smaller level
    draw_sprite(_Stage.LevelSprite[Levels.stage[Levels.roomindex]],image_index,x,y)

    draw_text(x,y+16,"P:" + string(Level))//level number
    
    //selected
    if _Stage.level_selected = Level
    {
        draw_set_color(c_red)
        draw_rectangle(x,y,x+16,y+16,true)   
    }
    
if left = true
  draw_sprite_ext(spr_levelSide,0,x-16,y+16,16,1,90,image_blend,image_alpha)

if right = true
  draw_sprite_ext(spr_levelSide,0,x+32,y,16,1,-90,image_blend,image_alpha)

if up = true
  draw_sprite_ext(spr_levelSide,0,x,y-16,16,1,0,image_blend,image_alpha)

if down = true
  draw_sprite_ext(spr_levelSide,0,x+16,y+32,16,1,180,image_blend,image_alpha)

if topleft = true
  draw_sprite_ext(spr_levelCorner,0,x-16,y,1,1,90,image_blend,image_alpha)

if topright = true
  draw_sprite_ext(spr_levelCorner,0,x+16,y-16,1,1,0,image_blend,image_alpha)
  
if bottomright = true
  draw_sprite_ext(spr_levelCorner,0,x+32,y+16,1,1,-90,image_blend,image_alpha)
  
if bottomleft = true
  draw_sprite_ext(spr_levelCorner,0,x,y+32,1,1,180,image_blend,image_alpha)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if _Stage.level_selected = Level
{
    room = Levels.roomid
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
