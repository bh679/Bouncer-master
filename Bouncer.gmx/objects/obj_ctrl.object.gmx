<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>double_click = false
mouseDown = 0
pathindex = 0
pathmax = 0
polse = 0
if room = MENUROOM
room_start()
helpAlpha = 1
ballFinished = false


soilIndexArray[0] = 0
soilIndexArray[1] = 6
soilIndexArray[2] = 7
soilIndexArray[3] = 8
soilIndexArray[4] = 9
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>define keys</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//only on splash page
if room = rm_splash
   set_keyconstants()

BACKAROOM = global.BACKSPACE
BACKAROOMMAC = vk_delete
QUIT = global.ESC
RESTARTKEY = vk_space
CHEATKEY1 = vk_pageup; CHEATKEY2 = vk_control; CHEATKEY3 = vk_alt; CHEATKEY4 = vk_shift;
SAVEKEY = vk_f5;
GRAPHICSKEY = vk_f11;
FORCERESTARTKEY = vk_f12;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Ui</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DisplayEndStats = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.IsLevel and (Levels.unlocked[Levels.roomindex] = false or !file_exists(working_directory+"\Levels\"+string(Levels.roomindex)+".png"))and global.previous_room != room
{
    screen_save(working_directory+"\Levels\"+string(Levels.roomindex)+".png")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !MouseInBox(room_width-linewidth - 32- 16,16,room_width - 16,16+ceil(lines*1.2)*16)and !(global.platform = iOS)
    new_tip()
else
    alarm[2] = 30*5
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if tipalpha &gt; 0.6
    tipalpha -= 0.05
else if tipalpha &gt; 0.5
    tipalpha -= 0.025
else if tipalpha &gt; 0.4
    tipalpha -= 0.010
else if tipalpha &gt; 0.3
    tipalpha -= 0.005
else if tipalpha &gt; 0.2
    tipalpha -= 0.0025

if tipalpha &gt; 0.2
    alarm[1] = 1

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>double_click = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
global.cogangle += 1

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>KeyPresses</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
 * KeyPresses for obj_ctrl are registered here
 * 
 *  - Go back a room 
 *  - Quit  
 *  - Restart
 *  - Cheat - skip level
 *  - Save progress to Disk
 *  - Graphics quality 
 *  - Force Restart Game
 */

///////////////////////////////////////////////////////////////
///////////////////////////////////Go back a room
//////////////////////////////////////////////////////////////

//Press backspace, or delete
if keyboard_check(BACKAROOM) or keyboard_check(BACKAROOMMAC)
{
    //Cant go back futher than menu
    if room != MENUROOM
    {
        //
        if global.roomend = false
        {
            //This room is now the last room
            global.previous_room = room
            //check this room isnt splashpage
            if room_previous(room) != rm_splash
               //get previous room from database
                Levels.roomindex = max(0,Levels.roomindex-1)
            //change rooms
            room_goto(room_previous(room))
        }
        else
            room_restart()
    }
}



///////////////////////////////////////////////////////////////
///////////////////////////////////Quit
//////////////////////////////////////////////////////////////

//Press esc
if keyboard_check(QUIT)
{
    //Exit game
    if room = MENUROOM and  keyboard_check_pressed(QUIT)
        game_end()
    else 
    {
        //regernerate level
        if instance_number(obj_new_level) = 1
        {
            global.generate = true
            //destroy all blocks
            with(obj_new_level)
            {
                y = 0
                repeat(room_height/BLOCKSIZE)
                {
                    x = 0
                    repeat(room_width/BLOCKSIZE)
                    {
                        if block[x,y] != -1
                            with(block[x,y]){instance_destroy()}
                        x += 1
                    }
                    y += 1
                }
            }
            //destroy ball
            with(obj_ball){instance_destroy()}
            //destorys self?
            instance_destroy()
        }
        //quit to main menu
        go_to_menu()
    }
}



///////////////////////////////////////////////////////////////
///////////////////////////////////Restart
//////////////////////////////////////////////////////////////

//Press space, or delete
if keyboard_check(RESTARTKEY)
{
    //edit mode
    if global.custom = true 
    {
        //reset ball
        with(obj_ball)
            {restart_custom()}
    }
    //wait till level is loaded before starting and ball is shot, holding down space will not shoot and reset
    else if global.load = false and obj_ball.shot = true and obj_ball.spaceDown = true
    {
        //level is not complete
        if global.roomend = false
           //restart
           room_restart()
        //level is complete
        else
        {  
            //go to next room
            nextroom()
        }
    }
}



///////////////////////////////////////////////////////////////
///////////////////////////////////Cheat - skip level
//////////////////////////////////////////////////////////////

//Press pgup, ctrl, shift, alt
if keyboard_check(CHEATKEY1) and keyboard_check(CHEATKEY2) and keyboard_check(CHEATKEY3) and keyboard_check(CHEATKEY4)
{
    if keyboard_check(vk_pagedown)
        global.testmode = true
    nextroom()
}




///////////////////////////////////////////////////////////////
///////////////////////////////////Screenshot
//////////////////////////////////////////////////////////////

//Press save
if keyboard_check(vk_f9)
{
    //writes current progress to disk
    screen_save("screenshot" + string(Levels.roomindex) + ".png")
}




///////////////////////////////////////////////////////////////
///////////////////////////////////Save
//////////////////////////////////////////////////////////////

//Press save
if keyboard_check(SAVEKEY)
{
    //writes current progress to disk
    save_levels()
}





///////////////////////////////////////////////////////////////
///////////////////////////////////change GRAPHICS detail
//////////////////////////////////////////////////////////////

//Press f11
if keyboard_check(GRAPHICSKEY)
{
     changeGraphics()
}





///////////////////////////////////////////////////////////////
///////////////////////////////////change GRAPHICS detail
//////////////////////////////////////////////////////////////

//Press f11
if keyboard_check(FORCERESTARTKEY)
{
    game_restart();
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if global.IsLevel and global.testmode = false and no_tutorial = 0 and global.skipping = false and instance_number(obj_ball) &gt; 0
{
    //balls stopped
    tmpblock = obj_ball.lastWallHit
    ballFinished = false
    if instance_exists(tmpblock)
    {
            if (obj_ball.speed &lt; 0.5 and obj_ball.collisionTimer &gt; 30*3 * (tmpblock.y/room_height)) and Levels.roomindex &lt; 15 and obj_ball.shot = true and global.time &gt; 15
                ballFinished = true
    }
}


//debuggin
//if obj_ball.continuousCounter &lt; 10
//   show_message("obj_ctrl.step")

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.doubleclicktime</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//in the menu room
if instance_exists(obj_menu)
   menuHidden = obj_menu.menu
else
   menuHidden = "no menu"

//ball is off the screen
if global.roomend = true and global.buttonclicked = false
{
    //custom level
    if global.custom = true 
    {
        with(obj_ball)
            {restart_custom()}
    }
    //normal level
    else
    {
        if global.load = true
        {
            if loaded = true
            {
                LoadCustom(level[loadedlevel]) 
                reset_var()
            }
        }
        //level complete
        else
            nextroom()
    }
}
//unknown room
else if instance_number(obj_ball) = 0
{
    //show_message("unknown Room?!?#No ball on room start#obj_ctrl : Left Click Release")//debuggin
}
//restart
else if (/*double_click = true and */global.skipping = false and global.IsLevel or (global.platform = iOS and (room != MENUROOM or menuHidden = "hidden"))) and obj_ball.shot = true and global.buttonclicked = false
    room_restart()
double_click = true

mouseDown = 0
global.buttonclicked = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(obj_ball) &gt; 0
   ballReady = obj_ball.shot
else
    ballReady = true
//hold down touch
if mouseDown &gt; SEC and ballReady and room != MENUROOM and global.platform = iOS
   go_to_menu()

mouseDown += 1

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
global.previous_room = room
if !(global.platform = iOS or global.platform = HTML5)
{
    if part_system_exists(shaft)
       part_system_destroy(shaft)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room = rm_splash
{
    initilise_game()
    stagename = 'menu'
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_start()
if instance_number(obj_ctrl) &gt; 1
    instance_destroy()
repeat(2)
    instance_create(x,y,obj_cloud)
    //save image
alarm[3] = 1






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>This has been moved to room start</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>321</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_message</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>2</kind>
            <string>ctrl</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
set_tips()
global.detail = 'high'
global.doubleclicktime = 10
global.level = 0
global.total_levels = 0
global.stage = 0
global.name = 'unnamed'
global.IsLevel = false
global.save = false
global.generate = true
global.testmode = false
global.previous_room = room
global.voices = true
global.backmusic = snd_stage1_peace
sound_loop(global.backmusic)
global.custom = false
//instance_create(x,y,obj_display)
stagename = 'menu'
global.cogangle = 0
global.load = false

if !directory_exists(working_directory+"\Levels")
            directory_create(working_directory+"\Levels")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>path</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>i = 1
if pathindex &lt; pathmax
{
    pathindex += 1
    polse = pathmax
}
else
    polse += 1
    
repeat(pathindex)
{
    line_direction = point_direction(obj_ball.path_x[i-1],obj_ball.path_y[i-1],obj_ball.path_x[i],obj_ball.path_y[i])
    
    draw_set_alpha(0.5)
    draw_set_color(c_black)
    w = 1
    draw_line(obj_ball.path_x[i-1] + lengthdir_x(w,line_direction+90),obj_ball.path_y[i-1] + lengthdir_y(w,line_direction+90),obj_ball.path_x[i] + lengthdir_x(w,line_direction+90),obj_ball.path_y[i] + lengthdir_y(w,line_direction+90))
    draw_line(obj_ball.path_x[i-1] + lengthdir_x(w,line_direction-90),obj_ball.path_y[i-1] + lengthdir_y(w,line_direction-90),obj_ball.path_x[i] + lengthdir_x(w,line_direction-90),obj_ball.path_y[i] + lengthdir_y(w,line_direction-90))
    
    if pathindex = pathmax
    {
        //draw_text(obj_ball.path_x[i-1],obj_ball.path_y[i-1] ,string(polse))
        w = 0
        draw_set_alpha(1)
        repeat(sin((i-polse)/(5+(pathindex)/4))*4)
        {
            draw_line(obj_ball.path_x[i-1] + lengthdir_x(w,line_direction+90),obj_ball.path_y[i-1] + lengthdir_y(w,line_direction+90),obj_ball.path_x[i] + lengthdir_x(w,line_direction+90),obj_ball.path_y[i] + lengthdir_y(w,line_direction+90))
            draw_line(obj_ball.path_x[i-1] + lengthdir_x(w,line_direction-90),obj_ball.path_y[i-1] + lengthdir_y(w,line_direction-90),obj_ball.path_x[i] + lengthdir_x(w,line_direction-90),obj_ball.path_y[i] + lengthdir_y(w,line_direction-90))
            w+=1
        } 
    }
    /*draw_set_color(c_white)
    draw_line(obj_ball.path_x[i-1] + lengthdir_x(w,line_direction+90),obj_ball.path_y[i-1] + lengthdir_y(w,line_direction+90),obj_ball.path_x[i] + lengthdir_x(w,line_direction+90),obj_ball.path_y[i] + lengthdir_y(w,line_direction+90))
    draw_line(obj_ball.path_x[i-1] + lengthdir_x(w,line_direction-90),obj_ball.path_y[i-1] + lengthdir_y(w,line_direction-90),obj_ball.path_x[i] + lengthdir_x(w,line_direction-90),obj_ball.path_y[i] + lengthdir_y(w,line_direction-90))
        
    /*/draw_set_alpha(1)
    draw_set_color(c_white)
    draw_line(obj_ball.path_x[i-1],obj_ball.path_y[i-1],obj_ball.path_x[i],obj_ball.path_y[i])//*/

    i += 1
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>info</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_font(Tahoma_R_14)
if room != rm_splash
{
    draw_set_color(c_white)
    if room != MENUROOM
        draw_text(10,460,'FPS: '+string(fps) + '    Stage: '+string(Levels.stage))
    else if instance_number(obj_new_level) != 0
    {
        draw_text(10,460,'FPS: '+string(fps) + '    Seed: '+string(obj_new_level.STARTSEED))
        draw_tip()
        if keyboard_check(vk_control)
        {
            draw_text(10,450,'1    Seed: '+string(obj_new_level.PreivousSeed[0]))
            draw_text(10,440,'2    Seed: '+string(obj_new_level.PreivousSeed[1]))
            draw_text(10,430,'3    Seed: '+string(obj_new_level.PreivousSeed[2]))
            draw_text(10,420,'4    Seed: '+string(obj_new_level.PreivousSeed[3]))
            draw_text(10,410,'5    Seed: '+string(obj_new_level.PreivousSeed[4]))
            draw_text(10,400,'6    Seed: '+string(obj_new_level.PreivousSeed[5]))
            draw_text(10,390,'7    Seed: '+string(obj_new_level.PreivousSeed[6]))
        }
        //enter seed
        if MouseInBox(10+string_width('FPS: '+string(fps) + '    '),460,10+string_width('FPS: '+string(fps) + '    Seed: '+string(obj_new_level.STARTSEED)),460+BLOCKSIZE)
        and mouse_check_button_pressed(mb_left)
        {
            obj_new_level.enterseed = true
            nextroom()
        } 
     
    }
       
/*
roomindex = 0
LevelsInStage[0] = 0
roomstageindex[0] = 0
global.total_levels = 0
stage[0] = 0
level[0] = 0
name[0] = 'menu'
stagename = 'menu'*/
// -----------------showing
if global.IsLevel and global.testmode = false and no_tutorial = 0 and global.skipping = false 
{
    if global.roomend = true and !(global.platform = iOS)
    {
        draw_score()    
    }
    
    
    ////////////////////
    //debuggin
    ////////////////////
    
    //tilit controls
    if global.debuggin = true and global.platform = iOS and global.release = false
    {
        draw_text_shadow(10,10,"Xtilt: " + string(YoYo_GetTiltX()),c_white,c_black,1)
        draw_text_shadow(10,30,"Ytilt: " + string(YoYo_GetTiltY()),c_white,c_black,1)
        draw_text_shadow(10,50,"Ztilt: " + string(YoYo_GetTiltZ()),c_white,c_black,1)
    } 
    
    ///////////////////////////////
    //block intorduction
    ///////////////////////////////
    
    if ballFinished = true
        helpAlpha = 0//max(helpAlpha - 0.1, 0)
    else
        helpAlpha = 1
    draw_set_alpha(helpAlpha)
    
    
    //wood
    if room = Levels.level[Levels.firstWood] and !obj_ctrl.DisplayEndStats
    {
          draw_set_font(TutFontBig) 
          draw_text_shadow(0,144,'Balls#bounce#higher#on#wood.',c_white,c_black,1)
        
    }
    else if room = Levels.level[Levels.firstSand] and !obj_ctrl.DisplayEndStats
    {
          draw_set_font(TutFontBig) 
          draw_text_shadow(208,16,'Sand! to soften#the bouncer.',c_white,c_black,1)
    }
    else if room = Levels.level[Levels.firstLava] and !obj_ctrl.DisplayEndStats
    {
          draw_set_font(TutFontBig) 
          draw_text_shadow(16,64,'Go for a dip!',c_white,c_black,1)
    }
    else if room = Levels.level[Levels.firstHotair] and !obj_ctrl.DisplayEndStats
    {
          draw_set_font(TutFontBig) 
          draw_text_shadow(48,400,'Need a lift?',c_white,c_black,1)
    }
    else if room = Levels.level[Levels.firstBox] and !obj_ctrl.DisplayEndStats
    {
          draw_set_font(TutFontBig) 
          draw_text_shadow(16,16,'Dont get stuck...',c_white,c_black,1)
    }
    else if room = Levels.level[Levels.firstTramp] and !obj_ctrl.DisplayEndStats
    {
    
    }
    else 
    
    //////////////////////////////////////
    //  tips
    /////////////////////////////////////
    
    {
        //tips alpha
        draw_set_alpha(1)
        //draw tips
        if  (global.roomend = true and global.platform = iOS )or !(global.platform = iOS)
            draw_tip()   
    }  
    
    //draw mouse pos
    if   !(global.platform = iOS)
    {
        draw_set_color(c_black)
        draw_set_font(Tahoma_R_14)
        draw_text_shadow(room_width - 100,room_height - 16,string(mouse_x) + "|" + string(mouse_y),c_white,c_black,1)
        draw_set_alpha(0.3)
        if mouse_x &gt; -100 and mouse_y &gt; -100
        {
            draw_set_font(Tahoma_R_8)
            draw_set_color(make_color_rgb(Levels.stage[Levels.roomindex]*30,Levels.stage[Levels.roomindex]*30,Levels.stage[Levels.roomindex]*30))     //0 = black, 255= white   
            draw_circle(global.lastx,global.lasty,5,true)
            draw_line(global.lastx - 15,global.lasty,global.lastx + 15,global.lasty)
            draw_line(global.lastx,global.lasty - 15,global.lastx,global.lasty + 15) 
            draw_set_alpha(0.7)
            draw_text(max(0,min(global.lastx-20,room_width-100)),min(global.lasty,room_height-16),string(global.lastx) + "|" + string(global.lasty))   
            draw_set_font(Tahoma_R_14) 
        }
        draw_set_alpha(1)  
        }
        
    /////////////////////////
    //draw restart help
    /////////////////////////
    //tmpblock = obj_ball.lastWallHit
    //ballFinished = false
    //draw_rectangle(tmpblock.x,tmpblock.y,tmpblock.x+16,tmpblock.y+16,false);//debuggin
    if ballFinished = true//(obj_ball.speed &lt; 0.5 and obj_ball.collisionTimer &gt; 30*3 * (tmpblock.y/room_height)) and Levels.roomindex &lt; 15 and obj_ball.shot = true and global.time &gt; 15
    {
        //ballFinished = true
        draw_set_font(TutFontBig)
        draw_set_halign(fa_middle)
        draw_set_alpha((sin(obj_ball.continuousCounter/22)/10+0.90))
        if global.platform = iOS
           draw_text_shadow(room_width/2, room_height/2, "Touch!", c_white,c_black,1)
        else
        {
            if !obj_ctrl.DisplayEndStats
                draw_text_shadow(room_width/2, room_height/2, "Press Space!", c_white,c_black,1)
            else
                draw_text_shadow(room_width/2, room_height*3/4, "Press Space!", c_white,c_black,1)
        }
        draw_set_alpha(1)
        draw_set_font(Tahoma_R_14)
        draw_set_halign(fa_left)
    }
    
}

//skipp level
if (keyboard_check(vk_control) or keyboard_check(vk_shift)) and global.IsLevel
{
    if Levels.unlocked[Levels.roomindex+1] = true
    {
        global.skipping = true
        draw_set_alpha(0.3)
        draw_set_color(c_black)
        draw_rectangle(room_width/3,room_height/3,room_width-room_width/3,room_height-room_height/3,false)
        draw_set_font(Tahoma_R_14) 
        draw_set_alpha(1)
        draw_text_shadow(room_width/2-35,room_height/2-8,"Next Level",c_white,c_black,1)
        if MouseInBox(room_width/3,room_height/3,room_width-room_width/3,room_height-room_height/3) and mouse_check_button(mb_left)
            nextroom()
    }
}
else
    global.skipping = false
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>help</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///////////////////////////////
//block intorduction
///////////////////////////////
//wood
if room = Levels.level[Levels.firstWood]
{
      //draw_set_font(TutFontSmall)
      //draw_text_shadow(room_width/8,room_height/4,'Terrain can change the bounce.',c_white,c_black,1)
      draw_set_font(TutFontBig) 
      draw_text_shadow(0,144,'Balls#bounce#higher#on#wood.',c_white,c_black,1)
    
}
else if room = Levels.level[Levels.firstSand]
{
      //draw_set_font(TutFontSmall)
      //draw_text_shadow(room_width/8,room_height/4,'Terrain can change the bounce.',c_white,c_black,1)
      draw_set_font(TutFontBig) 
      draw_text_shadow(208,16,'Sand! to soften#the bouncer.',c_white,c_black,1)
}
else if room = Levels.level[Levels.firstLava]
{
      draw_set_font(TutFontBig) 
      draw_text_shadow(16,64,'Go for a dip!',c_white,c_black,1)
}
else if room = Levels.level[Levels.firstHotair]
{
      draw_set_font(TutFontBig) 
      draw_text_shadow(48,400,'Need a lift?',c_white,c_black,1)
}
else if room = Levels.level[Levels.firstBox]
{
      draw_set_font(TutFontBig) 
      draw_text_shadow(16,16,'Dont get stuck...',c_white,c_black,1)
}
else if room = Levels.level[Levels.firstTramp]
{

}
else 

//////////////////////////////////////
//  tips
/////////////////////////////////////

{


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="123">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Moved to Step event - bellow impossible</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="122">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Moved to Step event - bellow commented out</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.detail = 'high'
    global.detail = 'low'
else
    global.detail = 'high'
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="116">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Moved to Step event - bellow commented out</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//save_levels()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="33">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Moved to Step event - bellow commented out</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if keyboard_check(vk_control) and keyboard_check(vk_shift) and keyboard_check(vk_alt)
{
    if keyboard_check(vk_pagedown)
        global.testmode = true
    nextroom()
}/*
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Moved to Step event - bellow commented out</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if global.custom = true 
{
    with(obj_ball)
        {restart_custom()}
}
else if global.load = false
{
    if global.roomend = false
        room_restart()
    else
    {   
        nextroom()
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Moved to Step event - bellow commented out</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if room = newstage0
    game_end()
else 
{
if instance_number(obj_new_level) = 1
{
    global.generate = true
    with(obj_new_level)
    {
        y = 0
        repeat(room_height/BLOCKSIZE)
        {
            x = 0
            repeat(room_width/BLOCKSIZE)
            {
                if block[x,y] != -1
                    with(block[x,y]){instance_destroy()}
                x += 1
            }
            y += 1
        }
    }

    with(obj_ball){instance_destroy()}

    instance_destroy()
}
    go_to_menu()
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Moved to Step event - bellow commented out</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if room != MENUROOM
{
    if global.roomend = false
    {
        global.previous_room = room
        if room_previous(room) != rm_splash
            Levels.roomindex = max(0,Levels.roomindex-1)
        room_goto(room_previous(room))
    }
    else
        room_restart()
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
