<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1001</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if instance_number(obj_display) &gt; 1
    instance_destroy()
i = 0
Emptys = 0

//testing
stage = 0
if RoomIsLevel()
    stage = Levels.stage[Levels.roomindex]

if stage &gt; 7 
    stage = 7
    
if room = rm_splash    
    stage = 0
else if room = newstage0 
    stage = 0
    
    
//background
background[0] = bg_mountain
background[1] = bg_mountain
background[2] = bg_mountain
background[3] = bg_mountain2
background[4] = bg_mountain3
background[5] = bg_mountain4
background[6] = bg_mountain4
background[7] = bg_mountain5

//midground
midground[0] = noone
midground[1] = noone
midground[2] = noone//bg_windmill
midground[3] = bg_steelworks_forground
midground[4] = bg_steelworks_forground
midground[5] = bg_steelworks_forground2
midground[6] = bg_steelworks_forground2
midground[7] = bg_steelworks_forground3

//trees
trees[0] = bg_trees1
trees[1] = bg_trees2
trees[2] = bg_trees3
trees[3] = bg_trees4
trees[4] = bg_trees5
trees[5] = bg_trees6
trees[6] = bg_trees6
trees[7] = bg_trees6

//fore-background
fence[0] = noone
fence[1] = noone
fence[2] = noone
fence[3] = bg_fence1
fence[4] = bg_fence1
fence[5] = bg_fence2
fence[6] = bg_fence2
fence[7] = bg_fence2

//extras-background
ebackground[0] = noone
ebackground[1] = noone
ebackground[2] = noone//bg_windmill
ebackground[3] = bg_trees4
ebackground[4] = bg_trees5
ebackground[5] = bg_trees6
ebackground[6] = bg_trees6
ebackground[7] = bg_trees6


SunDis[0] = room_height/3/2
SunDis[1] = room_height/3/2
SunDis[2] = room_height/3/2
///background[2] = bg_overgrown
//backgroundwidth[1] = (1240-640)/2

//SUN                                              -------------------sun


//oppacity
Sunbrightnesss[0] = 1
Sunbrightnesss[1] = 1
Sunbrightnesss[2] = 0.99
Sunbrightnesss[3] = 0.95
Sunbrightnesss[4] = 0.90
Sunbrightnesss[5] = 0.85
Sunbrightnesss[6] = 0.8
Sunbrightnesss[7] = 0.75


SUNBEAMS = 6*4 //number of sunbeams
DISPLAYSIZE = 360 //visible sun in degrees

//rotation speed constants
IROT = DISPLAYSIZE/SUNBEAMS
SPEEDROT = 1/20

//size scale constants
ISCALE = 360/6
SPEEDSCALE = 1/20
MINSCALE = 3
RANGESCALE = 1/2

SUNSIZE = 1/2

//colour constants 
REDRANGE = 5
REDMIN = 255-REDRANGE 
GREENMIN = 220//175
GREENRANGE = 255-GREENMIN
//GREENMIN = 255-GREENRANGE 
BLUE = 45
COLOURSPEED = 1/100

//image alpha
ALPHAMIN = 0.75
ALPHASPEED = 1/50
ALPHARANGE = 1/4
IALPHA = DISPLAYSIZE/SUNBEAMS+15
repeat(SUNBEAMS)
{
    pos[i] = 0
    i += 1
}

//baclground this si changed in obj_newstage
red = 154
green = 217
blue = 234
skycolour = make_color_rgb(red,green,blue)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw exit
/*var xx, yy;
xx = 0
yy = 0
Emptys = 0
//top
repeat(floor(room_width/16))
{
    block = instance_place(xx,yy,wall_par)
    if block != noone
    {
        if block = obj_sheild or block = obj_sheild_clear
            xx+=16
        EmptyX[0] = xx
        Emptyy[0] = yy
        Emptys += 1
    }
    xx+=16
    
}
//right
repeat(floor(room_height/16))
{
    block = instance_place(xx,yy,wall_par)
    if block != noone
    {
        if block = obj_sheild or block = obj_sheild_clear
            xx+=16
        EmptyX[Emptys] = xx
        Emptyy[Emptys] = yy
        Emptys += 1
    }
    yy+=16
    
}
//bottom
xx = 0
repeat(floor(room_width/16))
{
    block = instance_place(xx,yy,wall_par)
    if block != noone
    {
        if block = obj_sheild or block = obj_sheild_clear
            xx+=16
        EmptyX[Emptys] = xx
        Emptyy[Emptys] = yy
        Emptys += 1
    }
    xx+=16
    
}
xx = 0
yy = 0
//left
repeat(floor(room_height/16))
{
    block = instance_place(xx,yy,wall_par)
    if block != noone
    {
        if block = obj_sheild or block = obj_sheild_clear
            xx+=16
        EmptyX[Emptys] = xx
        Emptyy[Emptys] = yy
        Emptys += 1
    }
    yy+=16
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stage = _Stage.stage
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sky</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//change cloud colour
with(obj_cloud)
{
    colour = make_color_rgb(255-stage*20,255-stage*20,255-stage*20)
}

//change background sky colour

var skyfade;
skyfade = 20
    //sky
    switch(stage)
    {
        case 0:
            red = 154
            green = 217
            blue = 234
            break;
        case 1: 
            red = 0/2 + 154/2
            green = 128/2 + 217/2
            blue = 128/2 + 234/2
            break;
        case 2: 
            red = 0
            green = 128
            blue = 128
            break;
        case 3: 
            red = 0
            green = 128
            blue = 92
            break;
        case 4: 
            red = 53
            green = 106
            blue = 89
            break;
        case 5: 
            red = 39
            green = 69
            blue = 56
            break;
        case 6: 
            red = 47
            green = 66
            blue = 53
            break;
        case 7: 
            red = 36
            green = 53
            blue = 44
            break;
    }
            skycolour = make_color_rgb(red+skyfade,green+skyfade,blue+skyfade)
            topskycolour = make_color_rgb(red,green,blue)
 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>leafs</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> 
LEAFNO = 0


//temps
var ystartpoint, yendpoint, xstartpoint, xendpoint, ystartpoint, yendpoint, xstartpoint, xendpoint, parts, lgreen, lred, lblue, lrgreen, lrred, lrblue;

//leafs
if trees[stage] = bg_trees1
{
    LEAFNO = 100
    ystartpoint[0] = 360
    yendpoint[0] = 448
    xstartpoint[0] = 0
    xendpoint[0] = room_width
    parts = 1
    
    leafindexs = 3
    
    lgreen = 70
    lred = 0
    lblue = 0
    lrgreen = 110
    lrred = 0
    lrblue = 0
    
}
else if trees[stage] = bg_trees2
{
    LEAFNO = 120
    ystartpoint[0] = 360
    yendpoint[0] = 448
    xstartpoint[0] = 0
    xendpoint[0] = 470
    parts = 1
    
    leafindexs = 3
    
    lgreen = 60
    lred = 0
    lblue = 0
    lrgreen = 110
    lrred = 40
    lrblue = 40
}
else if trees[stage] = bg_trees3
{
    LEAFNO = 70
    ystartpoint[0] = 360
    yendpoint[0] = 448
    xstartpoint[0] = 0
    xendpoint[0] = 470
    parts = 1
    
    leafindexs = 4
   
    lgreen = 60
    lred = 20
    lblue = 0
    lrgreen = 80
    lrred = 40
    lrblue = 10
}
else if trees[stage] = bg_trees4
{
    LEAFNO = 50
    ystartpoint[0] = 380
    yendpoint[0] = 448
    xstartpoint[0] = 0
    xendpoint[0] = 123
    
    ystartpoint[1] = 390
    yendpoint[1] = 448
    xstartpoint[1] = 328
    xendpoint[1] = 470
    parts = 2
    
    
    leafindexs = 5
    
    lgreen = 60
    lred = 40
    lblue = 0
    lrgreen = 70
    lrred = 50
    lrblue = 10
    
}
else if trees[stage] = bg_trees5
{
    LEAFNO = 40
    ystartpoint[0] = 380
    yendpoint[0] = 448
    xstartpoint[0] = 0
    xendpoint[0] = 123
    
    ystartpoint[1] = 390
    yendpoint[1] = 448
    xstartpoint[1] = 328
    xendpoint[1] = 470
    parts = 2
    
    
    leafindexs = 6
    
    lgreen = 60
    lred = 50
    lblue = 0
    lrgreen = 70
    lrred = 60
    lrblue = 20
    
}
else if trees[stage] = bg_trees6
{
    LEAFNO = 40 - (global.stage-6)*15
    ystartpoint[0] = 400
    yendpoint[0] = 448
    xstartpoint[0] = 0
    xendpoint[0] = 123
    
    ystartpoint[1] = 400
    yendpoint[1] = 448
    xstartpoint[1] = 328
    xendpoint[1] = 470
    parts = 2
    
    
    leafindexs = 6
    
    lgreen = 60 - (global.stage-6)*10
    lred = 50 + (global.stage-6)*5
    lblue = 0 
    lrgreen = 70 - (global.stage-6)*15
    lrred = 60 
    lrblue = 20
    
}
//    show_message(string(leafindexs)) // debuggin

random_set_seed(room)
    i = 0
    p = 0
    repeat(LEAFNO)
    {
        if i - p*LEAFNO/parts &gt;= LEAFNO/parts
            p += 1
            
        leafx[i] = xstartpoint[p]+random((room_height-(room_height-xendpoint[p]))-xstartpoint[p])
        leafy[i] = ystartpoint[p]+random((room_height-(room_height-yendpoint[p]))-ystartpoint[p])
        
        leafs[i] = (random(8)/10+0.5)*0.3
        leafd[i] = random(360)
        leafa[i] = random(0.3) + 0.7
        ci = floor(random(3))
        leafc[i] = make_color_rgb(lred+random(lrred),lgreen+random(lrgreen),lblue+random(lrblue))
        i+=1   
    }

randomize()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if RoomIsLevel()
    stage = Levels.stage[Levels.roomindex]
else if RoomIsStage()
    stage = GetStage();
else
    stage = 0

    
if stage &gt; 7 
    stage = 7
    
if room = rm_splash    
    stage = 0
else if room = newstage0 
    stage = 0
    
    
alarm[1] = 1

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sky</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.stage = stage

//change cloud colour
with(obj_cloud)
{
    colour = make_color_rgb(255-global.stage*20,255-global.stage*20,255-global.stage*20)
}

//change background sky colour

var skyfade;
skyfade = 20
    //sky
    switch(stage)
    {
        case 0:
            red = 154
            green = 217
            blue = 234
            break;
        case 1: 
            red = 0/2 + 154/2
            green = 128/2 + 217/2
            blue = 128/2 + 234/2
            break;
        case 2: 
            red = 0
            green = 128
            blue = 128
            break;
        case 3: 
            red = 0
            green = 128
            blue = 92
            break;
        case 4: 
            red = 53
            green = 106
            blue = 89
            break;
        case 5: 
            red = 39
            green = 69
            blue = 56
            break;
        case 6: 
            red = 47
            green = 66
            blue = 53
            break;
        case 7: 
            red = 36
            green = 53
            blue = 44
            break;
    }
            skycolour = make_color_rgb(red+skyfade,green+skyfade,blue+skyfade)
            topskycolour = make_color_rgb(red,green,blue)
 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>leafs</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> 
LEAFNO = 0


//temps
var ystartpoint, yendpoint, xstartpoint, xendpoint, ystartpoint, yendpoint, xstartpoint, xendpoint, parts, lgreen, lred, lblue, lrgreen, lrred, lrblue;

//leafs
if trees[stage] = bg_trees1
{
    LEAFNO = 100
    ystartpoint[0] = 360
    yendpoint[0] = 448
    xstartpoint[0] = 0
    xendpoint[0] = room_width
    parts = 1
    
    leafindexs = 3
    
    lgreen = 70
    lred = 0
    lblue = 0
    lrgreen = 110
    lrred = 0
    lrblue = 0
    
}
else if trees[stage] = bg_trees2
{
    LEAFNO = 120
    ystartpoint[0] = 360
    yendpoint[0] = 448
    xstartpoint[0] = 0
    xendpoint[0] = 470
    parts = 1
    
    leafindexs = 3
    
    lgreen = 60
    lred = 0
    lblue = 0
    lrgreen = 110
    lrred = 40
    lrblue = 40
}
else if trees[stage] = bg_trees3
{
    LEAFNO = 70
    ystartpoint[0] = 360
    yendpoint[0] = 448
    xstartpoint[0] = 0
    xendpoint[0] = 470
    parts = 1
    
    leafindexs = 4
   
    lgreen = 60
    lred = 20
    lblue = 0
    lrgreen = 80
    lrred = 40
    lrblue = 10
}
else if trees[stage] = bg_trees4
{
    LEAFNO = 50
    ystartpoint[0] = 380
    yendpoint[0] = 448
    xstartpoint[0] = 0
    xendpoint[0] = 123
    
    ystartpoint[1] = 390
    yendpoint[1] = 448
    xstartpoint[1] = 328
    xendpoint[1] = 470
    parts = 2
    
    
    leafindexs = 5
    
    lgreen = 60
    lred = 40
    lblue = 0
    lrgreen = 70
    lrred = 50
    lrblue = 10
    
}
else if trees[stage] = bg_trees5
{
    LEAFNO = 40
    ystartpoint[0] = 380
    yendpoint[0] = 448
    xstartpoint[0] = 0
    xendpoint[0] = 123
    
    ystartpoint[1] = 390
    yendpoint[1] = 448
    xstartpoint[1] = 328
    xendpoint[1] = 470
    parts = 2
    
    
    leafindexs = 6
    
    lgreen = 60
    lred = 50
    lblue = 0
    lrgreen = 70
    lrred = 60
    lrblue = 20
    
}
else if trees[stage] = bg_trees6
{
    LEAFNO = 40 - (global.stage-6)*15
    ystartpoint[0] = 400
    yendpoint[0] = 448
    xstartpoint[0] = 0
    xendpoint[0] = 123
    
    ystartpoint[1] = 400
    yendpoint[1] = 448
    xstartpoint[1] = 328
    xendpoint[1] = 470
    parts = 2
    
    
    leafindexs = 6
    
    lgreen = 60 - (global.stage-6)*10
    lred = 50 + (global.stage-6)*5
    lblue = 0 
    lrgreen = 70 - (global.stage-6)*15
    lrred = 60 
    lrblue = 20
    
}
//    show_message(string(leafindexs)) // debuggin

random_set_seed(room)
    i = 0
    p = 0
    repeat(LEAFNO)
    {
        if i - p*LEAFNO/parts &gt;= LEAFNO/parts
            p += 1
            
        leafx[i] = xstartpoint[p]+random((room_height-(room_height-xendpoint[p]))-xstartpoint[p])
        leafy[i] = ystartpoint[p]+random((room_height-(room_height-yendpoint[p]))-ystartpoint[p])
        
        leafs[i] = (random(8)/10+0.5)*0.3
        leafd[i] = random(360)
        leafa[i] = random(0.3) + 0.7
        ci = floor(random(3))
        leafc[i] = make_color_rgb(lred+random(lrred),lgreen+random(lrgreen),lblue+random(lrblue))
        i+=1   
    }

randomize()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>524</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global.platform = iOS
setPlatform()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.testmode = true
    Levels.roomindex = 1
 
       
//sky
//draw_set_color(skycolour)
//if Levels.stage = 3
//    ;
    
draw_rectangle_color(0,0,room_width,room_height,topskycolour,topskycolour,skycolour,skycolour,false)//_color

if global.detail &gt;= GRAPHICHIGH//!(global.platform = iOS or global.platform = HTML5)
{
    //LevelsInStage[0] = 0
    SunMinDis = SunDis[0]
    
    suny = 0;
    sunx = room_width
    SUNSIZE = 1
     
    i = 0
    repeat(SUNBEAMS)
    {
        pos[i] += 1
            
        scale = (MINSCALE+(cos(pos[i]*SPEEDSCALE)+sin(i*ISCALE))*RANGESCALE)*SUNSIZE
        red  = REDMIN+REDRANGE/2+sin(pos[i]*COLOURSPEED)*REDRANGE/2
        green = GREENMIN+GREENRANGE/2+cos(pos[i]*COLOURSPEED)*GREENRANGE/2
        alpha = (sin((pos[i]+i*IALPHA)*ALPHASPEED)*ALPHARANGE+ALPHAMIN)*Sunbrightnesss[stage]
        suncolour = make_color_rgb(red,green,BLUE)
        draw_sprite_ext(spr_sunbeam,0,sunx,suny,scale,scale,pos[i]*SPEEDROT+i*IROT,suncolour,alpha)
    
        i+=1
    }
    
    //draw sun body
    i = 0
    repeat(4)
    {
        draw_sprite_ext(spr_sun,0,sunx,suny,SUNSIZE,SUNSIZE,i*90,suncolour,Sunbrightnesss[stage])
        i += 1
    }
}

//background
if background[stage] != noone
draw_background(background[stage],0,0)

//mid background
if midground[stage] != noone
draw_background(midground[stage],0,0)


//trees-background
if trees[stage] != noone
draw_background(trees[stage],0,0)

//draw leaves
if global.detail = GRAPHICHIGHEST and (trees[stage] = bg_trees1 or  trees[stage] = bg_trees2 
or trees[stage] = bg_trees3 or  trees[stage] = bg_trees4
or trees[stage] = bg_trees5 or  trees[stage] = bg_trees6)
{
    i = 0
    repeat(LEAFNO)
    {
        if leafx[i] mod leafindexs &gt; 2
            color = leafc[i]//noone
        else
            color = leafc[i]
        draw_sprite_ext(spr_leaf,floor(leafx[i] mod leafindexs),leafx[i]+sin(pos[0]/30+leafx[i]+leafy[i])*3,leafy[i],leafs[i],leafs[i],leafd[i]+sin(pos[0]/30+leafx[i]+leafy[i])*(8-global.stage/2),color,leafa[i])
        i+= 1
    }

}
    

//extra background
if fence[stage] != noone
    draw_background(fence[stage],0,0)
    
//windmill
if stage = 2
{
    draw_sprite(spr_windmill,1,416,182)//stange
    draw_sprite_ext(spr_windmill,0,416,182,1,1,pos[0]/4,noone,1)//blades
}


//exit glow, boarder
image_alpha = 1
draw_set_color(c_blue)
boarderalpha = (sin(pos[0]/10)/2+1)/2
//top
draw_sprite_ext(spr_gradient,0,0,0,room_width,1,0,noone,boarderalpha)
//bottom
draw_sprite_ext(spr_gradient,0,0,room_height,room_width,-1,0,noone,boarderalpha)
//left
draw_sprite_ext(spr_gradient,0,0,0,room_height,-1,-90,noone,boarderalpha)
//right
draw_sprite_ext(spr_gradient,0,room_width,0,room_height,1,-90,noone,boarderalpha)
//i = 0
/*repeat(Emptys)
{
    draw_rectangle(EmptyX[i]-16,EmptyY[i]-16,EmptyX[i]+16,EmptyY[i]+16,false)
    i += 1
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
