<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//stage 1
CoverSprite[0] = spr_dirt

//stage2
CoverSprite[1] = spr_sand

//stage3
CoverSprite[2] = spr_creat

//stage4
CoverSprite[3] = spr_wall

//stage5
CoverSprite[4] = spr_tramp

//stage6
CoverSprite[5] = spr_magnet_north

//stage7
CoverSprite[6] = spr_magnet_south
//stage8
CoverSprite[7] = spr_sheild
//stage9
CoverSprite[8] = spr_glass

LevelNo = 0
selected = 0
maxunlocked = 0
level_selected = 0
stage = GetStage()
//roomindex = Levels.stageroomindex[stage]
//startstage = Levels.roomstageindex[roomindex]
i = 0
repeat((room_height/(room_width/5))*5+room_width/(room_width/5)+2)
{
    alpha[i] = 0
    roomindex = Levels.stageroomindex[stage] + i
    if file_exists(program_directory+"\Levels\"+string(roomindex) + '.png')//Levels.unlocked[i] = true
        image[i] = image_level()
    else
        image[i] = noone
    i+= 1
}

Levels.roomindex = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if Levels.LevelsInStage[Levels.stage[Levels.roomindex]] &lt;= Level
//    unlocked = true

if keyboard_check_released(vk_left)
    level_selected = max(level_selected - 1,0)
    
if keyboard_check_released(vk_right)
    level_selected = min(level_selected + 1,maxunlocked)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//save_levels()
stage = GetStage()

roomindex = Levels.stageroomindex[stage]

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = 0
y = 0
skip = false
repeat(5)
{
    repeat(5)
    {
        if skip = false//unlocked
        {
            //index for box
            roomindex = Levels.stageroomindex[stage] + min(Levels.LevelsInStage[stage],(y/(room_width/5))*5+x/(room_width/5)+1)
            
            if Levels.LevelsInStage[stage] &lt; (y/(room_width/5))*5+x/(room_width/5)+1 or Levels.unlocked[roomindex] = false// and Level != 0 // if level is locked 
            {
                skip = true//the rest are also locked
                draw_sprite_ext(CoverSprite[Levels.stage[roomindex]],0,x,y,(room_width/5)/16,(room_width/5)/16,0,noone,1)
            }
            // if level is unlocked    
            else
            {
                draw_set_color(c_black)
                draw_text(x,y+room_width/5-16,string(roomindex))//level number
                /*draw_text(x,y+10,"Stage No: " + string(Levels.roomstageindex[roomindex]))//stage
                draw_text(x,y+20,"#Name: #" + string(Levels.name[roomindex]))//room name
                draw_text(x,y+30,"#Level idName:#" + string(room_get_name(Levels.level[roomindex])))//room name*/
                draw_set_color(c_white)
            
            
                // if mouse is over
                if MouseInBox(x,y,x+room_width/5,y+room_width/5) and skip = false
                {
                    alpha[roomindex - Levels.stageroomindex[stage]] = min(alpha[roomindex - Levels.stageroomindex[stage]]+0.06,0.7)
                    
                    if mouse_check_button_pressed(mb_left) and !MouseInBox(0,0,sprite_get_width(spr_menu),sprite_get_height(spr_menu))//if clicked on
                    {
                        Levels.roomindex = roomindex
                        room = Levels.level[roomindex]
                    }
                }
                else
                    alpha[roomindex - Levels.stageroomindex[stage]] = max(alpha[roomindex - Levels.stageroomindex[stage]]-0.05,0.2)
            
                draw_rectangle(x,y,x+room_width/5,y+room_width/5,true)
                draw_set_color(c_black)
                //draw_set_alpha(alpha[roomindex - Levels.stageroomindex[stage]])
                if image[Levels.roomstageindex[roomindex]] != noone
                //draw_rectangle(x,y,x+room_width/5,y+room_width/5,false)
                    draw_sprite_ext(image[Levels.roomstageindex[roomindex]],0,x,y,(room_width/5)/160,(room_width/5)/120,0,noone,alpha[roomindex - Levels.stageroomindex[stage]])
            //draw_set_alpha(1)
           }     
        //draw box
        //x += room_width/5//next square across
        
        }
        else //the rest are locked
                draw_sprite_ext(CoverSprite[Levels.stage[roomindex]],0,x,y,(room_width/5)/16,(room_width/5)/16,0,noone,1)
        
        x += room_width/5//next square across
        
        

    }
    y += room_width/5//next square down
    x = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
