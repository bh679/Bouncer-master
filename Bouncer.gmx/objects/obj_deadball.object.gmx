<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>116</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move_contact</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>-90</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>32</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
voice_volume = 0.8
curr_voice = noone    
bounce_sound = true
hotair = false
sprite_index = spr_ball_waiting
image_speed = 0
spins = 4
spin_speed =0
image_angle2 = image_angle
sprite_index2 = sprite_index
wee = false
speak = false

WoodExists = false
DirtExists = false
SandExists = false
RockExists = false
BlockExists = false
TrampExists = false
bounced = false
alarm[4] = 3
image_alpha = 0.5
MAXPOS = obj_ball.MAXPOS

spaceDown = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>In lava</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha -= 0.0001
alarm[4] = 3
image_xscale -= 0.001
image_yscale -= 0.001
if voice_volume &gt; 0.6
voice_volume -= 0.001

if global.detail &lt; GRAPHICHIGHEST
{
   alarm[4] = 2
   balls = instance_number(obj_deadball)
   image_alpha -= 0.00005*balls
    image_xscale -= 0.0005*balls
    image_yscale -= 0.0005*balls
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wee = false
speak = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if pos_index &lt; MAXPOS
    pos_index += 1
path_x[pos_index] = x
path_y[pos_index] = y

alarm[2] = 3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bounce_sound = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hotair = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.detail &lt;= GRAPHICHIGH
    instance_destroy()

//test if about to bounce
if 
//right
(collision_line(x+lengthdir_x(8.1,direction+90),y+lengthdir_y(8.1,direction+90),x+lengthdir_x(8.1,direction+90)+lengthdir_x(speed+0.1,direction),y+lengthdir_y(8.1,direction+90)+lengthdir_y(speed+0.1,direction),wall_par,false,false) &lt;&gt; noone 
//left
or collision_line(x+lengthdir_x(8.1,direction-90),y+lengthdir_y(8.1,direction-90),x+lengthdir_x(8.1,direction-90)+lengthdir_x(speed+0.1,direction),y+lengthdir_y(8.1,direction-90)+lengthdir_y(speed+0.1,direction),wall_par,false,false) &lt;&gt; noone 
//centre
or collision_line(x,y,x+lengthdir_x(speed+16,direction),y+lengthdir_y(speed+16,direction),wall_par,false,false) &lt;&gt; noone )and speed &gt; 0.6 and bounce_sound = true
{
    //sound_play(fx_worp)
    bounce_sound = false
    bounced = false
    alarm[0] = 4
    

    //change image
    ran = random(100)
    image_speed = random(speed)/5
    if (abs(vspeed) &lt; 5 and ran &lt; 80) or ran &lt; 30
    {
        sprite_index2 = spr_ball_board
        image_angle2 += random(90)-45//random(360)
        spin_speed = hspeed*3/4
    }
    else if ran &lt; 40
    {
        sprite_index2 = spr_ball
        image_angle2 += random(90)-45
        spin_speed = random(speed)*5
    }
    else if ran &lt; 60
    {
        sprite_index2 = spr_ball_spin
        image_angle2 += random(90)-45
        spin_speed = random(speed)*5
    }
    else if ran &lt; 80
    {
        sprite_index2 = spr_ball_spin2
        image_angle2 += random(90)-45
        spin_speed = random(speed)*5
    }
    //sound
    //plays less the more balls
    if random(instance_number(obj_deadball)) &lt; 2
       ball_play_voice_hurt();
    //check what type fo block it hits
    //CollisionBlockType()
    bounces+=1;

}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>115</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_bounce</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*
  ***********
  ** shoot **
  ***********
*/
 
//at some point between the ball being create and shot, space was not pressed
if !keyboard_check(vk_space) and spaceDown = false
    spaceDown = true
        
if mouse_check_button(mb_left) or (keyboard_check(vk_space) and spaceDown = true)
    alive = false

  //image while waiting
  if 30*random(2) &lt;= 1
    image_index = random(8)

//image        
    image_angle2 -= spin_speed*10     
    spin_speed = min( max( spin_speed - 0.01, 0 ), spin_speed + 0.01 )
  
/*
  *************
  ** physics **
  *************
*/  
//block = instance_nearest(x,y-1,obj_wall)
speed = max(speed - 0.05,0) // resistance
//if not vspeed = 0 and block.y+8 &gt; y+15 and block.x &lt; x and block.x+16 &gt; x
//  {
//  show_message('gravity')
vspeed += 0.45
//  }               // gracity

//Magnet
if distance_to_object(obj_magnet_north) &lt; 75 
    {magnet = instance_nearest(x-8,y-8,obj_magnet_north)
    hspeed += (magnet.x+8-x)/50
    if hspeed &gt; 16
            {hspeed = 16}
    vspeed += (magnet.y+8-y)/50
    if vspeed &gt; 16
            {vspeed = 16}}
            
if distance_to_object(obj_magnet_south) &lt; 75 
    {magnet = instance_nearest(x-8,y-8,obj_magnet_south)
    hspeed -= (magnet.x+8-x)/50
    if hspeed &gt; 16
            {hspeed = 16}
    vspeed -= (magnet.y+8-y)/50
    if vspeed &gt; 16
            {vspeed = 16}}

            


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alive = false
{
    other_ball = instance_nth_nearest(x,y,obj_deadball,2)
          
    if distance_to_object(other_ball) &gt; distance_to_object(obj_ball)
        other_ball = obj_ball
  
    if distance_to_object(other_ball) &lt; 2 
    {
        hspeed -= (other_ball.x-x)/50
        if hspeed &gt; 16
                hspeed = 16
        vspeed -= (other_ball.y-y)/50
        if vspeed &gt; 16
               vspeed = 16
    }   
}
/*if distance_to_object(other_ball) &lt; 0.5 and other_ball.speed &lt; speed
{
if other_ball.vspeed &gt; 0
{
    if vspeed &lt; 0
    {
        vspeed = -vspeed + other_ball.vspeed/3
    }
    else
    {
        vspeed += max(other_ball.vspeed/2,0.01)
    }
}
else
{
    if vspeed &gt; 0
        vspeed = -vspeed + other_ball.vspeed/3
    else
        vspeed += max(other_ball.vspeed/2,0.01)
}

if other_ball.hspeed &gt; 0
{
    if hspeed &lt; 0
        hspeed = -hspeed + other_ball.hspeed/3
    else
        hspeed += max(other_ball.hspeed/2,0.01)
}
else
{
    if hspeed &gt; 0
        hspeed = -hspeed + other_ball.hspeed/3
    else
        hspeed += max(other_ball.hspeed/3,0.01)
}
other_ball.speed = other_ball.speed/2
}
if speed = 0
    move_towards_point(other_ball.x,other_ball.y,-2)

    if hspeed &gt; 16
            hspeed = 16
    if vspeed &gt; 16
            vspeed = 16
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>115</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_bounce</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hotair">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hotair = false
{
    hotair = true
    vspeed -= 0.55
    x += sin(y/(30))/2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>120</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_linear_step</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>other.x+8</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>other.y+8</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-(speed+0.1)</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_lava">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.previous_room != room
    instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//play voices
if global.voices = true
    play_voice('finish',voice)

if alive = true
{
    if global.roomend = false
    {
        global.completes += 1
    
        if pos_index &lt; MAXPOS
            pos_index += 1
        path_x[pos_index] = x
        path_y[pos_index] = y

        global.dis = 0
        var i;
        i = 0
        repeat(pos_index-1)
        {
            global.dis += point_distance(path_x[i],path_y[i],path_x[i+1],path_y[i+1])/16//sqrt((path_y[i] - path_y[i+1])^2+(path_x[i] - path_x[i+1])^2)/16
            i += 1
        }

        obj_ctrl.pathindex = 0
        obj_ctrl.pathmax = pos_index
        global.time += time
        global.bounces = bounces
           //calculate score
        x__ = (global.dis/30+global.bounces+global.time/30)/9
        global._score = 100/(x__+2)+50-x__/2
        //calc stage score
        global.stageScore = CalcAvgLevelScore(global.stage)
        
        UnlockNewStaged()
        
        if global.IsLevel
            saverecords()
        global.roomend = true
        speed = 0
        
    }
}
else
    instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(image_alpha)
if alive = true
    draw_set_color(obj_ball.ball_color[voice])
else
    draw_set_color(color)
draw_circle(x,y,7*image_xscale,false)
draw_set_alpha(1)
draw_sprite_ext(sprite_index2,image_index,x,y,image_xscale,image_yscale,image_angle2,image_blend,image_alpha)
if (wee = true or speak = true) and sprite_index2 != spr_ball_spin and sprite_index2 != spr_ball_spin2 and sprite_index != spr_ball
    draw_sprite_ext(spr_ball_speak,image_index,x,y,image_xscale,image_yscale,image_angle2,image_blend,image_alpha)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
