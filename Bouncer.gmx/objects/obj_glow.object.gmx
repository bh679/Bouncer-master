<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>col1 = noone; col2 = noone; col3 = noone; col4 = noone
place = 'left'
alarm[0] = 2
size = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var tmpBlock;
if position_meeting(x+16,y,obj_glow) = true and (place = 'top' or place = 'bottom')//check left
{
    tmpBlock = 0
    do
    {
        tmpBlock = instance_position(x+16*image_xscale,y,obj_glow)
        if tmpBlock.image_yscale = 1
        {
            image_xscale += tmpBlock.image_xscale
            with(tmpBlock)
            {
                instance_destroy()
            }
        }
        else
            tmpBlock = -1
    }
    until(tmpBlock = -1 or position_meeting(x+16*image_xscale,y,obj_glow) = false)
}
else if position_meeting(x,y+16,obj_glow) = true  and (place = 'left' or place = 'right')//check left
{
    tmpBlock = 0
    do
    {
        tmpBlock = instance_position(x,y+16*image_yscale,obj_glow)
        if tmpBlock.image_xscale = 1
        {
            image_yscale += tmpBlock.image_yscale
            with(tmpBlock)
            {
                instance_destroy()
            }
        }
        else
            tmpBlock = -1
    }
    until(tmpBlock = -1 or position_meeting(x,y+16*image_yscale,obj_glow) = false)
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if place = 'left'
{
    col1 = c_white
    col4 = c_white
}
else if place = 'right'
{
    image_xscale = -image_xscale
    col3 = c_white
    col2 = c_white
}
else if place = 'up'
{
    col1 = c_white
    col2 = c_white
}
else if place = 'down'
{
    col3 = c_white
    col4 = c_white     
    image_yscale = -image_yscale
}   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(obj_ball) != 0
   size = sin(obj_ball.continuousCounter/20)*1+1.5
image_alpha = size/2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_rectangle_color(x,y,x+image_xscale*BLOCKSIZE,y+image_yscale*BLOCKSIZE,col1,col2,col3,col4,false)


//exit glow, boarder
//top
if place = 'top'
   draw_sprite_ext(spr_gradient,0,x,y,image_xscale*BLOCKSIZE,size,0,noone,image_alpha)
//bottom
else if place = 'bottom'
     draw_sprite_ext(spr_gradient,0,x,y,image_xscale*BLOCKSIZE,-size,0,noone,image_alpha)
//left
else if place = 'left'
draw_sprite_ext(spr_gradient,0,x,y,image_yscale*BLOCKSIZE,-size,-90,noone,image_alpha)
//right
else if place = 'right'
     draw_sprite_ext(spr_gradient,0,x,y,image_yscale*BLOCKSIZE,size,-90,noone,image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
