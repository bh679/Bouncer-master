<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>selected = false
if global.custom = true
{
    RectStartX = 0
    RectStartY = 0
    xSize = 0
    ySize = 0
    tempx = 0
    tempy = 0
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.custom = true
{
    obj_custom.dead = id
    with(wall_par)
    {
            if distance_to_object(obj_custom.dead) &lt;= 16 
            {
                up = false
                up2 = true
                right = false
                down = false
                left = false
                //change image
                if position_meeting(x-16,y,wall_par) = true //check left
                    left = true 
            
                if position_meeting(x,y-16,wall_par) = true //check up
                {
                    up = true 
                    if position_meeting(x,y-32,wall_par) = true or floor(random(5)) != 1 //check up
                        up2 = true
                }
                

                if position_meeting(x+17,y,wall_par) = true//check right
                    right  = true

                if position_meeting(x,y+17,wall_par) = true //check down
                    down = true
                    
                check = true
            }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>setalarm = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if selected = true
{
    obj_custom.SelLastX = x
    obj_custom.SelLastY = y
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.custom = true
{

    //delete block mouse is on
    //delete block
    if MouseInBox(x,y,x+sprite_width*image_xscale,y+sprite_height*image_yscale) and obj_custom.play = false
    {
        if mouse_check_button(mb_right)
        {
            obj_custom.selectedobject = -1
            instance_destroy()
        }
    }
    
    //if mouse on
    if mouse_check_button_pressed(mb_left) and obj_custom.ChooseBallPos = false
    {
        //select block
        if selected = false and MouseInBox(x,y,x+sprite_width*image_xscale,y+sprite_height*image_yscale)
        {
            selected = true
            //setalarm = true
            seed = random(100)
        }
        //create rectangle of blocks
        else if (keyboard_check(vk_control) and selected = true)
        {
            tempx = min(obj_custom.grid_mousex,x)
            tempy = min(obj_custom.grid_mousey,y)
            selected = false
            repeat(ySize)
            {
                tempx = min(obj_custom.grid_mousex,x)
                repeat(xSize)
                {
                    if instance_place(tempx,tempy,wall_par) = noone
                        instance_create(tempx,tempy,object_index)
                    tempx += 16
                }
                tempy += 16
            }
        }
        //unselect block
        else if !(keyboard_check(vk_shift) and selected = true and instance_place(obj_custom.grid_mousex,obj_custom.grid_mousey,wall_par) = noone)
        {
            selected = false
            obj_custom.selectedobject = -1
        }
    }
    
    //place multi
    if mouse_check_button(mb_left)
    {
        if keyboard_check(vk_shift) and selected = true and instance_place(obj_custom.grid_mousex,obj_custom.grid_mousey,wall_par) = noone
            instance_create(x,y,object_index)
    }
    
    //deselect if playing
    if obj_custom.play = true
        selected = false
        
    //selected
    if selected = true and instance_place(obj_custom.grid_mousex,obj_custom.grid_mousey,wall_par) = noone
    {   
        //delete block
        if mouse_check_button_pressed(mb_right)
        {
            obj_custom.selectedobject = -1
            instance_destroy()
        }
        
        obj_custom.selectedobject = id
        
        //moving block
        if !keyboard_check(vk_control)
        {
            x = obj_custom.grid_mousex
            y = obj_custom.grid_mousey
        }
        //choosing rectangle of blocks
        else
        {
            xSize = abs(obj_custom.grid_mousex - x)/16
            ySize = abs(obj_custom.grid_mousey - y)/16
            tempx = min(obj_custom.grid_mousex,x)
            tempy = min(obj_custom.grid_mousey,y)
        }
        
        //reset image of blocks nearby
        with(wall_par)
        {
            if distance_to_object(obj_custom.selectedobject) &lt;= 16 
            or obj_custom.selectedobject = id 
            or distance_to_point(obj_custom.grid_mousex,obj_custom.grid_mousey) &lt;= 16
            or distance_to_point(obj_custom.SelLastX,obj_custom.SelLastY) &lt;= 16
            {
                up = false
                up2 = true
                right = false
                down = false
                left = false
                //change image
                if position_meeting(x-16,y,wall_par) = true //check left
                    left = true 
            
                if position_meeting(x,y-16,wall_par) = true //check up
                {
                    up = true 
                    if position_meeting(x,y-32,wall_par) = true or floor(random(5)) != 1 //check up
                        up2 = true
                }
                

                if position_meeting(x+17,y,wall_par) = true//check right
                    right  = true

                if position_meeting(x,y+17,wall_par) = true //check down
                    down = true
                    
                check = true
            }
        }
        randomize()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>selected = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsShapePoints/>
</object>
